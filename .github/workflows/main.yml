name: MLOps Pipeline CI/CT/CD (Iris)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  ci-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r mlops_pipeline/requirements.txt
          pip install flake8 pytest

      - name: Lint with flake8 (fail on critical)
        run: |
          flake8 mlops_pipeline/scripts --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Lint report (non-blocking)
        run: |
          flake8 mlops_pipeline/scripts --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          pytest || (if [ $? -eq 5 ]; then echo "Pytest finished: No tests found."; exit 0; else exit $?; fi)

  build-and-train:
    needs: ci-checks
    runs-on: ubuntu-latest
    env:
      # (ถ้ามี MLflow Server ภายนอก ใส่ secrets ไว้ที่ Settings > Secrets and variables > Actions)
      MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
      MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
      MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r mlops_pipeline/requirements.txt

      - name: Step 1 - Data Validation
        env:
          MLFLOW_TRACKING_URI: file:./mlruns
        run: python mlops_pipeline/scripts/01_data_validation.py

      - name: Step 2 - Preprocess
        id: preprocess
        env:
          MLFLOW_TRACKING_URI: file:./mlruns
        run: python mlops_pipeline/scripts/02_data_preprocessing.py

      - name: Read preprocessing run_id (from $GITHUB_OUTPUT)
        id: read_runid
        shell: bash
        run: |
          RUN_ID=$(tail -n 1 "$GITHUB_OUTPUT" | sed 's/run_id=//')
          echo "run_id=$RUN_ID" >> "$GITHUB_OUTPUT"

      - name: Step 3 - Train/Evaluate/Register
        env:
          MLFLOW_TRACKING_URI: file:./mlruns
        run: python mlops_pipeline/scripts/03_train_evaluate_register.py "${{ steps.preprocess.outputs.run_id }}"

      - name: Transition Model to Staging
        if: success()
        run: python mlops_pipeline/scripts/04_transition_model.py "iris-classifier-prod" "Staging"

      - name: Upload processed data as artifact
        uses: actions/upload-artifact@v4
        with:
          name: processed_data
          path: processed_data/
